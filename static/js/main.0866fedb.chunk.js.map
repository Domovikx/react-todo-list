{"version":3,"sources":["components/app-base-heder/app-base-header.js","components/app-base-heder/index.js","components/app-search-panel/search-field/search-field.js","components/app-search-panel/search-field/index.js","components/app-search-panel/app-search-panel.js","components/app-search-panel/index.js","components/todo-list/todo-list-item/button-del/index.js","components/todo-list/todo-list-item/button-del/button-del.js","components/todo-list/todo-list-item/button-done/index.js","components/todo-list/todo-list-item/button-done/button-done.js","components/todo-list/todo-list-item/button-important/index.js","components/todo-list/todo-list-item/button-important/button-important.js","components/todo-list/todo-list-item/todo-list-item.js","components/todo-list/todo-list-item/index.js","components/todo-list/todo-list.js","components/todo-list/index.js","components/app-add-item-panel/text-area-multiline/text-area-multiline.js","components/app-add-item-panel/text-area-multiline/index.js","components/app-add-item-panel/the-button/index.js","components/app-add-item-panel/the-button/the-button.js","components/app-add-item-panel/index.js","components/app-add-item-panel/app-add-item-panel.js","components/app/index.js","components/app/app.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appBar","borderBottom","concat","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","margin","spacing","AppBaseHeader","_ref","countTodo","countDone","countImportant","classes","react_default","a","createElement","AppBar","position","color","elevation","className","Toolbar","Typography","variant","noWrap","Link","href","target","rel","container","display","textField","marginLeft","marginRight","width","SearchField","onSetSearchText","noValidate","autoComplete","TextField","id","label","type","onChange","e","stopPropagation","preventDefault","text","value","grid","btn","AppSearchPanel","visibility","onSearchPanel","onToggle","toggle","all","done","important","Grid","direction","justify","alignItems","search_field","Button","style","onClick","ButtonDel","onDelited","ButtonDone","_ref$done","onDone","ButtonImportant","_ref$important","onImportant","paper","padding","textAlign","secondary","backgroundColor","typography","TodoListItem","content","props","Object","objectWithoutProperties","Paper","button_important","button_done","button_del","TodoList","todoData","elements","map","item","itemProps","react","key","todo_list_todo_list_item","assign","Fragment","TextAreaMultiline","onInputChange","placeholder","multiline","TheButton","onAdd","AppAddItemPanel","xs","md","text_area_multiline","the_button","App","maxId","state","_this","createNewItem","searchText","event","setState","idx","findIndex","el","newTodoData","toConsumableArray","splice","_ref2","_ref3","toggleProp","_ref4","length","filter","_ref5","this","arr","propName","newArr","oldItem","newItem","objectSpread","defineProperty","items","arguments","undefined","toLowerCase","indexOf","_this$state","visibleItems","onSearch","console","log","CssBaseline","app_base_heder","app_search_panel","app_add_item_panel","components_todo_list","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_app","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0866fedb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Typography, AppBar, Toolbar, Link, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\tappBar: {\r\n\t\tborderBottom: `1px solid ${theme.palette.divider}`,\r\n\t},\r\n\ttoolbar: {\r\n\t\tflexWrap: 'wrap',\r\n\t},\r\n\ttoolbarTitle: {\r\n\t\tflexGrow: 1,\r\n\t},\r\n\tlink: {\r\n\t\tmargin: theme.spacing(1, 1.5),\r\n\t}\r\n}));\r\n\r\nfunction AppBaseHeader({ countTodo, countDone, countImportant }) {\r\n\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\r\n\t\t\t<Toolbar className={classes.toolbar}>\r\n\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\r\n\t\t\t\t\tToDo List Item: {countImportant()} {countDone()} {countTodo()}\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tvariant=\"button\" color=\"textPrimary\" className={classes.link}\r\n\t\t\t\t\t\thref=\"https://vk.com/domovikx\" target='_blank' rel=\"noopener\">\r\n\t\t\t\t\t\tvk\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link variant=\"button\" color=\"textPrimary\" className={classes.link}\r\n\t\t\t\t\t\thref=\"https://github.com/Domovikx\" target='_blank' rel=\"noopener\">\r\n\t\t\t\t\t\tGitHub\r\n            </Link>\r\n\t\t\t\t</nav>\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n}\r\n\r\nexport default AppBaseHeader;","import AppBaseHeader from './app-base-header';\r\n\r\nexport default AppBaseHeader;","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: '95%',\r\n    }\r\n}));\r\n\r\nexport default function SearchField({ onSetSearchText }) {\r\n    const classes = useStyles();\r\n\r\n    const onChange = (e) => {\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        const text = e.target.value\r\n        onSetSearchText(text)\r\n    }\r\n\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <TextField\r\n                id=\"standard-search\"\r\n                label=\"Search field\"\r\n                type=\"search\"\r\n                className={classes.textField}\r\n                margin=\"normal\"\r\n                onChange={onChange}\r\n                // onSubmit={onChange}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n","import SearchField from './search-field';\r\n\r\nexport default SearchField;","import React from 'react';\r\nimport SearchField from './search-field';\r\nimport { Grid, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  grid: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  btn: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nexport default function AppSearchPanel({ visibility, onSearchPanel, onSetSearchText }) {\r\n  const classes = useStyles();\r\n\r\n  const onToggle = (toggle) => {\r\n    visibility.all = false\r\n    visibility.done = false\r\n    visibility.important = false\r\n    visibility[toggle] = !visibility[toggle]\r\n    onSearchPanel()\r\n  }\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"flex-end\"\r\n      alignItems=\"flex-end\"\r\n    >\r\n      <Grid className={classes.grid}>\r\n        <SearchField\r\n          onSetSearchText={onSetSearchText}\r\n        />\r\n        <Button\r\n          className={classes.btn}\r\n          style={{ color: visibility.all ? 'darkcyan' : '' }}\r\n          onClick={() => onToggle('all')}\r\n        >All</Button>\r\n        <Button\r\n          className={classes.btn}\r\n          style={{ color: visibility.done ? 'darkcyan' : '' }}\r\n          onClick={() => onToggle('done')}\r\n        >Done</Button>\r\n        <Button\r\n          className={classes.btn}\r\n          style={{ color: visibility.important ? 'darkcyan' : '' }}\r\n          onClick={() => onToggle('important')}\r\n        >Important</Button>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}","import AppSearchPanel from './app-search-panel';\r\n\r\nexport default AppSearchPanel;","import ButtonDel from './button-del'\r\n\r\nexport default ButtonDel;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nexport default function ButtonDel({ onDelited }) {\r\n\r\n\tconst style = {\r\n\t\tmargin: 10\r\n\t}\r\n\r\n\tconst onClick = () => {\r\n\t\tonDelited();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tstyle={style}\r\n\t\t\tonClick={onClick}\r\n\t\t>del</Button>\r\n\t)\r\n}","import ButtonDone from './button-done'\r\n\r\nexport default ButtonDone;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ButtonDone({ done = false, onDone }) {\r\n\r\n\tconst style = {\r\n\t\tmargin: 10,\r\n\t\tcolor: done ? 'darkcyan' : ''\r\n\t}\r\n\r\n\tconst onClick = () => {\r\n\t\tonDone();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tstyle={style}\r\n\t\t\tonClick={onClick}\r\n\t\t>done</Button>\r\n\t)\r\n}","import ButtonImportant from './button-important'\r\n\r\nexport default ButtonImportant;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ButtonImportant({ important = false, onImportant }) {\r\n\r\n\tconst style = {\r\n\t\tmargin: 10,\r\n\t\tcolor: important ? 'crimson' : ''\r\n\t}\r\n\r\n\tconst onClick = () => {\r\n\t\tonImportant()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tvariant=\"contained\"\r\n\t\t\tstyle={style}\r\n\t\t\tonClick={onClick}\r\n\t\t>important</Button>\r\n\t)\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport ButtonDel from './button-del';\r\nimport ButtonDone from './button-done';\r\nimport ButtonImportant from './button-important';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    margin: theme.spacing(1),\r\n    backgroundColor: 'whitesmoke',    \r\n  },\r\n  typography: {\r\n    color: 'black',\r\n  },\r\n}));\r\n\r\nfunction TodoListItem({ content, done, important, ...props }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Paper className={classes.paper}>\r\n        <Grid >\r\n          <Typography className={classes.typography}>\r\n            {content}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid >\r\n          <ButtonImportant\r\n            important={important}\r\n            onImportant={props.onImportant}\r\n          />\r\n          <ButtonDone\r\n            done={done}\r\n            onDone={props.onDone}\r\n          />\r\n          <ButtonDel\r\n            onDelited={props.onDelited}\r\n          />\r\n\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default TodoListItem;\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;","import React, { Fragment } from 'react';\r\n\r\nimport TodoListItem from './todo-list-item';\r\n\r\nfunction TodoList({ todoData, visibility, ...props }) {\r\n\r\n  const elements = todoData.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <Fragment key={id}>\r\n        <TodoListItem\r\n          {...itemProps}\r\n          onDelited={() => props.onDelited(id)}\r\n          onDone={() => props.onDone(id)}\r\n          onImportant={() => props.onImportant(id)}\r\n        />\r\n      </Fragment>\r\n    );\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {elements}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\n\r\nexport default function TextAreaMultiline({ onInputChange, content }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <TextField\r\n      id=\"standard-textarea\"\r\n      label=\"Please enter your text\"\r\n      placeholder=\"...\"\r\n      multiline\r\n      className={classes.textField}\r\n      margin=\"normal\"\r\n      onChange={onInputChange}\r\n      value={content}\r\n    />\r\n  );\r\n}\r\n","import TextAreaMultiline from './text-area-multiline';\r\n\r\nexport default TextAreaMultiline;","import TheButton from './the-button';\r\n\r\nexport default TheButton;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function TheButton({ onAdd }) {\r\n\r\n  const style = {\r\n    margin: 10\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      style={style}\r\n      onClick={onAdd}\r\n    >Add</Button>\r\n  )\r\n\r\n}","import AppAddItemPanel from './app-add-item-panel';\r\n\r\nexport default AppAddItemPanel;","import React from 'react';\r\n\r\nimport TextAreaMultiline from './text-area-multiline';\r\nimport TheButton from './the-button';\r\nimport { Grid } from '@material-ui/core';\r\n\r\n\r\nexport default function AppAddItemPanel({ onAdd, onInputChange, content }) {\r\n\treturn (\r\n\t\t<Grid\r\n\t\t\tcontainer xs item\r\n\t\t\tdirection=\"row\"\r\n\t\t\tjustify=\"center\"\r\n\t\t\talignItems=\"stretch\"\r\n\t\t>\r\n\t\t\t<Grid item xs={12} md={9}>\r\n\t\t\t\t<TextAreaMultiline\r\n\t\t\t\t\tonInputChange={onInputChange}\r\n\t\t\t\t\tcontent={content}\r\n\t\t\t\t/>\r\n\t\t\t</Grid>\r\n\t\t\t<TheButton\r\n\t\t\t\tonAdd={onAdd}\r\n\t\t\t/>\r\n\t\t</Grid>\r\n\t);\r\n}","import App from \"./app\";\r\n\r\nexport default App;","import React, { Component } from 'react';\n\nimport AppBaseHeader from '../app-base-heder'\nimport AppSearchPanel from '../app-search-panel'\nimport TodoList from '../todo-list'\nimport AppAddItemPanel from '../app-add-item-panel';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\n\nclass App extends Component {\n  maxId = 100\n\n  state = {\n    todoData: [\n      this.createNewItem('asd'),\n      this.createNewItem('zxc'),\n      this.createNewItem('qwe'),\n    ],\n    content: '',\n    visibility: {\n      all: true,\n      done: false,\n      important: false,\n    },\n    searchText: '',\n  }\n\n  onInputChange = (event) => {\n    this.setState({\n      content: event.target.value\n    })\n  }\n\n  createNewItem(content) {\n    return {\n      content,\n      done: false,\n      important: false,\n      id: this.maxId++\n    }\n  }\n\n  idx = (id) => this.state.todoData.findIndex((el) => el.id === id)\n  onDelited = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = this.idx(id)\n      const newTodoData = [...todoData]\n      newTodoData.splice(idx, 1)\n      return { todoData: newTodoData }\n    })\n  }\n\n  onAdd = () => {\n    this.setState(({ todoData, content }) => {\n      const newItem = this.createNewItem(content)\n      return { todoData: [newItem, ...todoData], content: '' }\n    })\n  }\n\n  toggleProp(arr, id, propName) {\n    const newArr = [...arr]\n    const idx = newArr.findIndex((el) => el.id === id)\n    const oldItem = newArr[idx]\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] }\n    newArr[idx] = newItem\n    return newArr\n  }\n  onImportant = (id) => {\n    this.setState(({ todoData }) => {\n      const newTodoData = this.toggleProp(todoData, id, 'important')\n      return { todoData: newTodoData }\n    })\n  }\n  onDone = (id) => {\n    this.setState(({ todoData }) => {\n      const newTodoData = this.toggleProp(todoData, id, 'done')\n      return { todoData: newTodoData }\n    })\n  }\n\n  countTodo = () => this.state.todoData.length\n  countDone = () => this.state.todoData.filter((el) => el.done).length\n  countImportant = () => this.state.todoData.filter((el) => el.important).length\n\n  onSearchPanel = () => {\n    this.setState(({ visibility }) => {\n      return { visibility }\n    }\n    )\n  }\n\n  onSetSearchText = (text) => {\n    this.setState({ searchText: text })\n  }\n\n  onSearch(items = this.state.todoData, searchText = this.state.searchText) {\n    if (searchText === 0) return items\n    return items.filter((item) =>\n      item.content\n        .toLowerCase()\n        .indexOf(searchText.toLowerCase()) > -1)\n  }\n\n  filter(items = this.state.todoData) {\n    const visibility = this.state.visibility\n    let filter = 'all'\n\n    if (visibility.all) filter = 'all'\n    if (visibility.done) filter = 'done'\n    if (visibility.important) filter = 'important'\n\n    switch (filter) {\n      case 'all':\n        return items\n      case 'done':\n        return items.filter((item) => item.done)\n      case 'important':\n        return items.filter((item) => item.important)\n      default:\n        return items\n    }\n  }\n\n  render() {\n    const { visibility, content } = this.state\n    const visibleItems = this.filter(this.onSearch())\n    console.log('visibleItems', visibleItems)\n\n    return (\n      <>\n        <CssBaseline />\n        <AppBaseHeader\n          countTodo={this.countTodo}\n          countDone={this.countDone}\n          countImportant={this.countImportant}\n        />\n        <AppSearchPanel\n          visibility={visibility}\n          onSearchPanel={this.onSearchPanel}\n          onSetSearchText={this.onSetSearchText}\n        />\n        <AppAddItemPanel\n          onAdd={this.onAdd}\n          onInputChange={this.onInputChange}\n          content={content}\n        />\n        <TodoList\n          visibility={visibility}\n          todoData={visibleItems}\n          onDelited={this.onDelited}\n          onImportant={this.onImportant}\n          onDone={this.onDone}\n        />\n      </>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nimport 'typeface-roboto';\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}